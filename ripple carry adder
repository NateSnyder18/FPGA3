module adder(input [1:0] A, B, input CI, output a, b, c, d, e, f, g);
    wire CO, CO2;
    wire [1:0] SUM;
    one_adder F0(A[0], B[0], CI, CO, SUM[0]);
    one_adder F1(A[1], B[1], CO, CO2, SUM[1]);
    segConv S1(SUM, a, b, c, d, e, f, g);
endmodule

module one_adder(A, B, CI, CO, SUM);
    input A, B, CI;
    output CO, SUM;
    assign SUM = (A^B^CI);
    assign CO = (A&B&CI)|(A&B&~CI)|(A&~B&CI)|(~A&B&CI);
endmodule

module segConv(input [1:0] num, output a, b, c, d, e, f, g);
    assign a = (num==2'd1);
    assign b = 0;
    assign c = (num==2'd2);
    assign d = (num==2'd1);
    assign e = (num==2'd1)|(num==2'd3);
    assign f = (num==2'd1)|(num==2'd2)|(num==2'd3);
    assign g = (num==2'd0)|(num==2'd1);
endmodule
